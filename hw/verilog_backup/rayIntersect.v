// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rayIntersect,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.440000,HLS_SYN_LAT=14,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=30,HLS_SYN_FF=6050,HLS_SYN_LUT=5858,HLS_VERSION=2019_1}" *)

module rayIntersect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ray_o_0,
        ray_o_1,
        ray_o_2,
        ray_d_0,
        ray_d_1,
        ray_d_2,
        ray_dRcp_0,
        ray_dRcp_1,
        ray_dRcp_2,
        ray_mint,
        ray_maxt,
        min_0,
        min_1,
        min_2,
        max_0,
        max_1,
        max_2,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ray_o_0;
input  [31:0] ray_o_1;
input  [31:0] ray_o_2;
input  [31:0] ray_d_0;
input  [31:0] ray_d_1;
input  [31:0] ray_d_2;
input  [31:0] ray_dRcp_0;
input  [31:0] ray_dRcp_1;
input  [31:0] ray_dRcp_2;
input  [31:0] ray_mint;
input  [31:0] ray_maxt;
input  [31:0] min_0;
input  [31:0] min_1;
input  [31:0] min_2;
input  [31:0] max_0;
input  [31:0] max_1;
input  [31:0] max_2;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] ray_maxt_read_reg_2201;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter1_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter2_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter3_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter4_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter5_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter6_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter7_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter8_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter9_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter10_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter11_reg;
reg   [31:0] ray_maxt_read_reg_2201_pp0_iter12_reg;
reg   [31:0] ray_mint_read_reg_2207;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter1_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter2_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter3_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter4_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter5_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter6_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter7_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter8_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter9_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter10_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter11_reg;
reg   [31:0] ray_mint_read_reg_2207_pp0_iter12_reg;
reg   [31:0] ray_dRcp_2_read_reg_2213;
reg   [31:0] ray_dRcp_2_read_reg_2213_pp0_iter1_reg;
reg   [31:0] ray_dRcp_2_read_reg_2213_pp0_iter2_reg;
reg   [31:0] ray_dRcp_2_read_reg_2213_pp0_iter3_reg;
reg   [31:0] ray_dRcp_1_read_reg_2219;
reg   [31:0] ray_dRcp_1_read_reg_2219_pp0_iter1_reg;
reg   [31:0] ray_dRcp_1_read_reg_2219_pp0_iter2_reg;
reg   [31:0] ray_dRcp_1_read_reg_2219_pp0_iter3_reg;
reg   [31:0] ray_dRcp_0_read_reg_2225;
reg   [31:0] ray_dRcp_0_read_reg_2225_pp0_iter1_reg;
reg   [31:0] ray_dRcp_0_read_reg_2225_pp0_iter2_reg;
reg   [31:0] ray_dRcp_0_read_reg_2225_pp0_iter3_reg;
wire   [0:0] icmp_ln40_fu_362_p2;
reg   [0:0] icmp_ln40_reg_2282;
wire   [0:0] icmp_ln40_1_fu_368_p2;
reg   [0:0] icmp_ln40_1_reg_2287;
wire   [0:0] icmp_ln41_fu_410_p2;
reg   [0:0] icmp_ln41_reg_2292;
wire   [0:0] icmp_ln41_1_fu_416_p2;
reg   [0:0] icmp_ln41_1_reg_2297;
wire   [0:0] or_ln41_4_fu_434_p2;
reg   [0:0] or_ln41_4_reg_2302;
wire   [0:0] icmp_ln41_4_fu_458_p2;
reg   [0:0] icmp_ln41_4_reg_2308;
wire   [0:0] icmp_ln41_5_fu_464_p2;
reg   [0:0] icmp_ln41_5_reg_2313;
wire   [0:0] icmp_ln40_2_fu_488_p2;
reg   [0:0] icmp_ln40_2_reg_2330;
wire   [0:0] icmp_ln40_3_fu_494_p2;
reg   [0:0] icmp_ln40_3_reg_2335;
wire   [0:0] icmp_ln41_6_fu_536_p2;
reg   [0:0] icmp_ln41_6_reg_2340;
wire   [0:0] icmp_ln41_7_fu_542_p2;
reg   [0:0] icmp_ln41_7_reg_2345;
wire   [0:0] or_ln41_7_fu_560_p2;
reg   [0:0] or_ln41_7_reg_2350;
wire   [0:0] icmp_ln41_10_fu_584_p2;
reg   [0:0] icmp_ln41_10_reg_2356;
wire   [0:0] icmp_ln41_11_fu_590_p2;
reg   [0:0] icmp_ln41_11_reg_2361;
wire   [0:0] icmp_ln40_4_fu_614_p2;
reg   [0:0] icmp_ln40_4_reg_2378;
wire   [0:0] icmp_ln40_5_fu_620_p2;
reg   [0:0] icmp_ln40_5_reg_2383;
wire   [0:0] icmp_ln41_12_fu_662_p2;
reg   [0:0] icmp_ln41_12_reg_2388;
wire   [0:0] icmp_ln41_13_fu_668_p2;
reg   [0:0] icmp_ln41_13_reg_2393;
wire   [0:0] or_ln41_10_fu_686_p2;
reg   [0:0] or_ln41_10_reg_2398;
wire   [0:0] icmp_ln41_16_fu_710_p2;
reg   [0:0] icmp_ln41_16_reg_2404;
wire   [0:0] icmp_ln41_17_fu_716_p2;
reg   [0:0] icmp_ln41_17_reg_2409;
wire   [0:0] and_ln40_fu_726_p2;
reg   [0:0] and_ln40_reg_2414;
reg   [0:0] and_ln40_reg_2414_pp0_iter2_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter3_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter4_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter5_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter6_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter7_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter8_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter9_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter10_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter11_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter12_reg;
reg   [0:0] and_ln40_reg_2414_pp0_iter13_reg;
wire   [0:0] or_ln41_fu_762_p2;
reg   [0:0] or_ln41_reg_2422;
reg   [0:0] or_ln41_reg_2422_pp0_iter2_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter3_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter4_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter5_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter6_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter7_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter8_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter9_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter10_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter11_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter12_reg;
reg   [0:0] or_ln41_reg_2422_pp0_iter13_reg;
wire   [0:0] and_ln40_1_fu_772_p2;
reg   [0:0] and_ln40_1_reg_2428;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter2_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter3_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter4_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter5_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter6_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter7_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter8_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter9_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter10_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter11_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter12_reg;
reg   [0:0] and_ln40_1_reg_2428_pp0_iter13_reg;
wire   [0:0] or_ln41_1_fu_808_p2;
reg   [0:0] or_ln41_1_reg_2437;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter2_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter3_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter4_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter5_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter6_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter7_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter8_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter9_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter10_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter11_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter12_reg;
reg   [0:0] or_ln41_1_reg_2437_pp0_iter13_reg;
wire   [0:0] and_ln40_2_fu_818_p2;
reg   [0:0] and_ln40_2_reg_2443;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter2_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter3_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter4_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter5_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter6_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter7_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter8_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter9_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter10_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter11_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter12_reg;
reg   [0:0] and_ln40_2_reg_2443_pp0_iter13_reg;
wire   [0:0] or_ln41_2_fu_854_p2;
reg   [0:0] or_ln41_2_reg_2452;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter2_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter3_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter4_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter5_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter6_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter7_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter8_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter9_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter10_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter11_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter12_reg;
reg   [0:0] or_ln41_2_reg_2452_pp0_iter13_reg;
wire   [31:0] grp_fu_182_p2;
reg   [31:0] tmp_5_reg_2458;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] tmp_7_reg_2463;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] tmp_5_1_reg_2468;
wire   [31:0] grp_fu_200_p2;
reg   [31:0] tmp_7_1_reg_2473;
wire   [31:0] grp_fu_206_p2;
reg   [31:0] tmp_5_2_reg_2478;
wire   [31:0] grp_fu_212_p2;
reg   [31:0] tmp_7_2_reg_2483;
wire   [31:0] grp_fu_218_p2;
reg   [31:0] p_tmp_reg_2488;
reg   [31:0] p_tmp_reg_2488_pp0_iter7_reg;
wire   [31:0] grp_fu_222_p2;
reg   [31:0] p_b_read_assign_reg_2496;
reg   [31:0] p_b_read_assign_reg_2496_pp0_iter7_reg;
wire   [31:0] grp_fu_226_p2;
reg   [31:0] p_tmp_1_reg_2504;
reg   [31:0] p_tmp_1_reg_2504_pp0_iter7_reg;
wire   [31:0] grp_fu_230_p2;
reg   [31:0] p_b_read_assign_1_reg_2512;
reg   [31:0] p_b_read_assign_1_reg_2512_pp0_iter7_reg;
wire   [31:0] grp_fu_234_p2;
reg   [31:0] p_tmp_2_reg_2520;
reg   [31:0] p_tmp_2_reg_2520_pp0_iter7_reg;
reg   [31:0] p_tmp_2_reg_2520_pp0_iter8_reg;
reg   [31:0] p_tmp_2_reg_2520_pp0_iter9_reg;
wire   [31:0] grp_fu_238_p2;
reg   [31:0] p_b_read_assign_2_reg_2528;
reg   [31:0] p_b_read_assign_2_reg_2528_pp0_iter7_reg;
reg   [31:0] p_b_read_assign_2_reg_2528_pp0_iter8_reg;
reg   [31:0] p_b_read_assign_2_reg_2528_pp0_iter9_reg;
wire   [31:0] select_ln47_fu_942_p3;
reg   [31:0] select_ln47_reg_2536;
wire   [31:0] select_ln47_1_fu_948_p3;
reg   [31:0] select_ln47_1_reg_2543;
wire   [31:0] select_ln47_2_fu_1036_p3;
reg   [31:0] select_ln47_2_reg_2550;
reg   [31:0] select_ln47_2_reg_2550_pp0_iter9_reg;
wire   [31:0] select_ln47_3_fu_1042_p3;
reg   [31:0] select_ln47_3_reg_2557;
reg   [31:0] select_ln47_3_reg_2557_pp0_iter9_reg;
wire   [0:0] icmp_ln53_fu_1082_p2;
reg   [0:0] icmp_ln53_reg_2564;
wire   [0:0] icmp_ln53_1_fu_1088_p2;
reg   [0:0] icmp_ln53_1_reg_2569;
wire   [0:0] icmp_ln53_2_fu_1094_p2;
reg   [0:0] icmp_ln53_2_reg_2574;
wire   [0:0] icmp_ln53_3_fu_1100_p2;
reg   [0:0] icmp_ln53_3_reg_2579;
wire   [0:0] and_ln41_4_fu_1111_p2;
reg   [0:0] and_ln41_4_reg_2584;
reg   [0:0] and_ln41_4_reg_2584_pp0_iter10_reg;
reg   [0:0] and_ln41_4_reg_2584_pp0_iter11_reg;
reg   [0:0] and_ln41_4_reg_2584_pp0_iter12_reg;
reg   [0:0] and_ln41_4_reg_2584_pp0_iter13_reg;
wire   [31:0] select_ln41_fu_1116_p3;
reg   [31:0] select_ln41_reg_2589;
reg   [31:0] select_ln41_reg_2589_pp0_iter10_reg;
wire   [31:0] select_ln41_1_fu_1124_p3;
reg   [31:0] select_ln41_1_reg_2597;
reg   [31:0] select_ln41_1_reg_2597_pp0_iter10_reg;
wire   [0:0] and_ln53_1_fu_1146_p2;
reg   [0:0] and_ln53_1_reg_2605;
reg   [0:0] and_ln53_1_reg_2605_pp0_iter11_reg;
reg   [0:0] and_ln53_1_reg_2605_pp0_iter12_reg;
reg   [0:0] and_ln53_1_reg_2605_pp0_iter13_reg;
wire   [31:0] select_ln50_fu_1234_p3;
reg   [31:0] select_ln50_reg_2611;
wire   [31:0] select_ln51_fu_1322_p3;
reg   [31:0] select_ln51_reg_2618;
wire   [31:0] select_ln47_4_fu_1410_p3;
reg   [31:0] select_ln47_4_reg_2625;
reg   [31:0] select_ln47_4_reg_2625_pp0_iter11_reg;
wire   [31:0] select_ln47_5_fu_1416_p3;
reg   [31:0] select_ln47_5_reg_2632;
reg   [31:0] select_ln47_5_reg_2632_pp0_iter11_reg;
wire   [0:0] icmp_ln53_4_fu_1456_p2;
reg   [0:0] icmp_ln53_4_reg_2639;
wire   [0:0] icmp_ln53_5_fu_1462_p2;
reg   [0:0] icmp_ln53_5_reg_2644;
wire   [0:0] icmp_ln53_6_fu_1468_p2;
reg   [0:0] icmp_ln53_6_reg_2649;
wire   [0:0] icmp_ln53_7_fu_1474_p2;
reg   [0:0] icmp_ln53_7_reg_2654;
wire   [0:0] xor_ln41_1_fu_1480_p2;
reg   [0:0] xor_ln41_1_reg_2659;
reg   [0:0] xor_ln41_1_reg_2659_pp0_iter12_reg;
reg   [0:0] xor_ln41_1_reg_2659_pp0_iter13_reg;
wire   [0:0] and_ln41_9_fu_1485_p2;
reg   [0:0] and_ln41_9_reg_2664;
reg   [0:0] and_ln41_9_reg_2664_pp0_iter12_reg;
reg   [0:0] and_ln41_9_reg_2664_pp0_iter13_reg;
wire   [31:0] select_ln41_2_fu_1490_p3;
reg   [31:0] select_ln41_2_reg_2669;
reg   [31:0] select_ln41_2_reg_2669_pp0_iter12_reg;
wire   [31:0] select_ln41_3_fu_1497_p3;
reg   [31:0] select_ln41_3_reg_2677;
reg   [31:0] select_ln41_3_reg_2677_pp0_iter12_reg;
wire   [0:0] and_ln53_3_fu_1518_p2;
reg   [0:0] and_ln53_3_reg_2685;
reg   [0:0] and_ln53_3_reg_2685_pp0_iter13_reg;
wire   [31:0] select_ln50_1_fu_1606_p3;
reg   [31:0] select_ln50_1_reg_2691;
wire   [31:0] select_ln51_1_fu_1694_p3;
reg   [31:0] select_ln51_1_reg_2698;
wire   [0:0] icmp_ln53_8_fu_1734_p2;
reg   [0:0] icmp_ln53_8_reg_2705;
wire   [0:0] icmp_ln53_9_fu_1740_p2;
reg   [0:0] icmp_ln53_9_reg_2710;
wire   [0:0] icmp_ln53_10_fu_1746_p2;
reg   [0:0] icmp_ln53_10_reg_2715;
wire   [0:0] icmp_ln53_11_fu_1752_p2;
reg   [0:0] icmp_ln53_11_reg_2720;
wire   [0:0] xor_ln41_2_fu_1758_p2;
reg   [0:0] xor_ln41_2_reg_2725;
wire   [0:0] and_ln41_14_fu_1763_p2;
reg   [0:0] and_ln41_14_reg_2730;
wire   [31:0] select_ln41_4_fu_1768_p3;
wire   [31:0] select_ln41_5_fu_1775_p3;
wire   [0:0] icmp_ln58_fu_1817_p2;
reg   [0:0] icmp_ln58_reg_2745;
wire   [0:0] icmp_ln58_1_fu_1823_p2;
reg   [0:0] icmp_ln58_1_reg_2750;
wire   [0:0] icmp_ln58_2_fu_1829_p2;
reg   [0:0] icmp_ln58_2_reg_2755;
wire   [0:0] icmp_ln58_3_fu_1835_p2;
reg   [0:0] icmp_ln58_3_reg_2760;
wire   [0:0] icmp_ln58_4_fu_1876_p2;
reg   [0:0] icmp_ln58_4_reg_2765;
wire   [0:0] icmp_ln58_5_fu_1882_p2;
reg   [0:0] icmp_ln58_5_reg_2770;
wire   [0:0] icmp_ln58_6_fu_1888_p2;
reg   [0:0] icmp_ln58_6_reg_2775;
wire   [0:0] icmp_ln58_7_fu_1894_p2;
reg   [0:0] icmp_ln58_7_reg_2780;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire   [31:0] grp_fu_308_p1;
wire   [31:0] grp_fu_312_p0;
wire   [31:0] grp_fu_324_p1;
wire   [31:0] grp_fu_328_p0;
wire   [31:0] bitcast_ln40_fu_344_p1;
wire   [7:0] tmp_fu_348_p4;
wire   [22:0] trunc_ln40_fu_358_p1;
wire   [31:0] bitcast_ln41_fu_374_p1;
wire   [31:0] bitcast_ln41_1_fu_392_p1;
wire   [7:0] tmp_2_fu_378_p4;
wire   [22:0] trunc_ln41_fu_388_p1;
wire   [7:0] tmp_3_fu_396_p4;
wire   [22:0] trunc_ln41_1_fu_406_p1;
wire   [0:0] icmp_ln41_3_fu_428_p2;
wire   [0:0] icmp_ln41_2_fu_422_p2;
wire   [31:0] bitcast_ln41_2_fu_440_p1;
wire   [7:0] tmp_6_fu_444_p4;
wire   [22:0] trunc_ln41_2_fu_454_p1;
wire   [31:0] bitcast_ln40_1_fu_470_p1;
wire   [7:0] tmp_14_fu_474_p4;
wire   [22:0] trunc_ln40_1_fu_484_p1;
wire   [31:0] bitcast_ln41_3_fu_500_p1;
wire   [31:0] bitcast_ln41_4_fu_518_p1;
wire   [7:0] tmp_16_fu_504_p4;
wire   [22:0] trunc_ln41_3_fu_514_p1;
wire   [7:0] tmp_17_fu_522_p4;
wire   [22:0] trunc_ln41_4_fu_532_p1;
wire   [0:0] icmp_ln41_9_fu_554_p2;
wire   [0:0] icmp_ln41_8_fu_548_p2;
wire   [31:0] bitcast_ln41_5_fu_566_p1;
wire   [7:0] tmp_19_fu_570_p4;
wire   [22:0] trunc_ln41_5_fu_580_p1;
wire   [31:0] bitcast_ln40_2_fu_596_p1;
wire   [7:0] tmp_33_fu_600_p4;
wire   [22:0] trunc_ln40_2_fu_610_p1;
wire   [31:0] bitcast_ln41_6_fu_626_p1;
wire   [31:0] bitcast_ln41_7_fu_644_p1;
wire   [7:0] tmp_35_fu_630_p4;
wire   [22:0] trunc_ln41_6_fu_640_p1;
wire   [7:0] tmp_36_fu_648_p4;
wire   [22:0] trunc_ln41_7_fu_658_p1;
wire   [0:0] icmp_ln41_15_fu_680_p2;
wire   [0:0] icmp_ln41_14_fu_674_p2;
wire   [31:0] bitcast_ln41_8_fu_692_p1;
wire   [7:0] tmp_38_fu_696_p4;
wire   [22:0] trunc_ln41_8_fu_706_p1;
wire   [0:0] or_ln40_fu_722_p2;
wire   [0:0] grp_fu_242_p2;
wire   [0:0] or_ln41_3_fu_732_p2;
wire   [0:0] and_ln41_fu_736_p2;
wire   [0:0] grp_fu_248_p2;
wire   [0:0] or_ln41_5_fu_747_p2;
wire   [0:0] and_ln41_2_fu_751_p2;
wire   [0:0] grp_fu_254_p2;
wire   [0:0] and_ln41_1_fu_741_p2;
wire   [0:0] and_ln41_3_fu_756_p2;
wire   [0:0] or_ln40_1_fu_768_p2;
wire   [0:0] grp_fu_260_p2;
wire   [0:0] or_ln41_6_fu_778_p2;
wire   [0:0] and_ln41_5_fu_782_p2;
wire   [0:0] grp_fu_266_p2;
wire   [0:0] or_ln41_8_fu_793_p2;
wire   [0:0] and_ln41_7_fu_797_p2;
wire   [0:0] grp_fu_272_p2;
wire   [0:0] and_ln41_6_fu_787_p2;
wire   [0:0] and_ln41_8_fu_802_p2;
wire   [0:0] or_ln40_2_fu_814_p2;
wire   [0:0] grp_fu_278_p2;
wire   [0:0] or_ln41_9_fu_824_p2;
wire   [0:0] and_ln41_10_fu_828_p2;
wire   [0:0] grp_fu_284_p2;
wire   [0:0] or_ln41_11_fu_839_p2;
wire   [0:0] and_ln41_12_fu_843_p2;
wire   [0:0] grp_fu_290_p2;
wire   [0:0] and_ln41_11_fu_833_p2;
wire   [0:0] and_ln41_13_fu_848_p2;
wire   [31:0] bitcast_ln47_fu_860_p1;
wire   [31:0] bitcast_ln47_1_fu_877_p1;
wire   [7:0] tmp_s_fu_863_p4;
wire   [22:0] trunc_ln47_fu_873_p1;
wire   [0:0] icmp_ln47_1_fu_900_p2;
wire   [0:0] icmp_ln47_fu_894_p2;
wire   [7:0] tmp_8_fu_880_p4;
wire   [22:0] trunc_ln47_1_fu_890_p1;
wire   [0:0] icmp_ln47_3_fu_918_p2;
wire   [0:0] icmp_ln47_2_fu_912_p2;
wire   [0:0] or_ln47_fu_906_p2;
wire   [0:0] or_ln47_1_fu_924_p2;
wire   [0:0] and_ln47_fu_930_p2;
wire   [0:0] grp_fu_296_p2;
wire   [0:0] and_ln47_1_fu_936_p2;
wire   [31:0] bitcast_ln47_2_fu_954_p1;
wire   [31:0] bitcast_ln47_3_fu_971_p1;
wire   [7:0] tmp_21_fu_957_p4;
wire   [22:0] trunc_ln47_2_fu_967_p1;
wire   [0:0] icmp_ln47_5_fu_994_p2;
wire   [0:0] icmp_ln47_4_fu_988_p2;
wire   [7:0] tmp_22_fu_974_p4;
wire   [22:0] trunc_ln47_3_fu_984_p1;
wire   [0:0] icmp_ln47_7_fu_1012_p2;
wire   [0:0] icmp_ln47_6_fu_1006_p2;
wire   [0:0] or_ln47_2_fu_1000_p2;
wire   [0:0] or_ln47_3_fu_1018_p2;
wire   [0:0] and_ln47_2_fu_1024_p2;
wire   [0:0] grp_fu_300_p2;
wire   [0:0] and_ln47_3_fu_1030_p2;
wire   [31:0] bitcast_ln53_fu_1048_p1;
wire   [31:0] bitcast_ln53_1_fu_1065_p1;
wire   [7:0] tmp_11_fu_1051_p4;
wire   [22:0] trunc_ln53_fu_1061_p1;
wire   [7:0] tmp_12_fu_1068_p4;
wire   [22:0] trunc_ln53_1_fu_1078_p1;
wire   [0:0] xor_ln41_fu_1106_p2;
wire   [0:0] or_ln53_fu_1132_p2;
wire   [0:0] or_ln53_1_fu_1136_p2;
wire   [0:0] and_ln53_fu_1140_p2;
wire   [0:0] grp_fu_304_p2;
wire   [31:0] bitcast_ln215_fu_1152_p1;
wire   [31:0] bitcast_ln215_1_fu_1169_p1;
wire   [7:0] tmp_24_fu_1155_p4;
wire   [22:0] trunc_ln215_fu_1165_p1;
wire   [0:0] icmp_ln215_1_fu_1192_p2;
wire   [0:0] icmp_ln215_fu_1186_p2;
wire   [7:0] tmp_25_fu_1172_p4;
wire   [22:0] trunc_ln215_1_fu_1182_p1;
wire   [0:0] icmp_ln215_3_fu_1210_p2;
wire   [0:0] icmp_ln215_2_fu_1204_p2;
wire   [0:0] or_ln215_fu_1198_p2;
wire   [0:0] or_ln215_1_fu_1216_p2;
wire   [0:0] and_ln215_fu_1222_p2;
wire   [0:0] grp_fu_308_p2;
wire   [0:0] and_ln215_1_fu_1228_p2;
wire   [31:0] bitcast_ln192_fu_1240_p1;
wire   [31:0] bitcast_ln192_1_fu_1257_p1;
wire   [7:0] tmp_27_fu_1243_p4;
wire   [22:0] trunc_ln192_fu_1253_p1;
wire   [0:0] icmp_ln192_1_fu_1280_p2;
wire   [0:0] icmp_ln192_fu_1274_p2;
wire   [7:0] tmp_28_fu_1260_p4;
wire   [22:0] trunc_ln192_1_fu_1270_p1;
wire   [0:0] icmp_ln192_3_fu_1298_p2;
wire   [0:0] icmp_ln192_2_fu_1292_p2;
wire   [0:0] or_ln192_fu_1286_p2;
wire   [0:0] or_ln192_1_fu_1304_p2;
wire   [0:0] and_ln192_fu_1310_p2;
wire   [0:0] grp_fu_312_p2;
wire   [0:0] and_ln192_1_fu_1316_p2;
wire   [31:0] bitcast_ln47_4_fu_1328_p1;
wire   [31:0] bitcast_ln47_5_fu_1345_p1;
wire   [7:0] tmp_40_fu_1331_p4;
wire   [22:0] trunc_ln47_4_fu_1341_p1;
wire   [0:0] icmp_ln47_9_fu_1368_p2;
wire   [0:0] icmp_ln47_8_fu_1362_p2;
wire   [7:0] tmp_41_fu_1348_p4;
wire   [22:0] trunc_ln47_5_fu_1358_p1;
wire   [0:0] icmp_ln47_11_fu_1386_p2;
wire   [0:0] icmp_ln47_10_fu_1380_p2;
wire   [0:0] or_ln47_4_fu_1374_p2;
wire   [0:0] or_ln47_5_fu_1392_p2;
wire   [0:0] and_ln47_4_fu_1398_p2;
wire   [0:0] grp_fu_316_p2;
wire   [0:0] and_ln47_5_fu_1404_p2;
wire   [31:0] bitcast_ln53_2_fu_1422_p1;
wire   [31:0] bitcast_ln53_3_fu_1439_p1;
wire   [7:0] tmp_30_fu_1425_p4;
wire   [22:0] trunc_ln53_2_fu_1435_p1;
wire   [7:0] tmp_31_fu_1442_p4;
wire   [22:0] trunc_ln53_3_fu_1452_p1;
wire   [0:0] or_ln53_2_fu_1504_p2;
wire   [0:0] or_ln53_3_fu_1508_p2;
wire   [0:0] and_ln53_2_fu_1512_p2;
wire   [0:0] grp_fu_320_p2;
wire   [31:0] bitcast_ln215_2_fu_1524_p1;
wire   [31:0] bitcast_ln215_3_fu_1541_p1;
wire   [7:0] tmp_43_fu_1527_p4;
wire   [22:0] trunc_ln215_2_fu_1537_p1;
wire   [0:0] icmp_ln215_5_fu_1564_p2;
wire   [0:0] icmp_ln215_4_fu_1558_p2;
wire   [7:0] tmp_44_fu_1544_p4;
wire   [22:0] trunc_ln215_3_fu_1554_p1;
wire   [0:0] icmp_ln215_7_fu_1582_p2;
wire   [0:0] icmp_ln215_6_fu_1576_p2;
wire   [0:0] or_ln215_2_fu_1570_p2;
wire   [0:0] or_ln215_3_fu_1588_p2;
wire   [0:0] and_ln215_2_fu_1594_p2;
wire   [0:0] grp_fu_324_p2;
wire   [0:0] and_ln215_3_fu_1600_p2;
wire   [31:0] bitcast_ln192_2_fu_1612_p1;
wire   [31:0] bitcast_ln192_3_fu_1629_p1;
wire   [7:0] tmp_46_fu_1615_p4;
wire   [22:0] trunc_ln192_2_fu_1625_p1;
wire   [0:0] icmp_ln192_5_fu_1652_p2;
wire   [0:0] icmp_ln192_4_fu_1646_p2;
wire   [7:0] tmp_47_fu_1632_p4;
wire   [22:0] trunc_ln192_3_fu_1642_p1;
wire   [0:0] icmp_ln192_7_fu_1670_p2;
wire   [0:0] icmp_ln192_6_fu_1664_p2;
wire   [0:0] or_ln192_2_fu_1658_p2;
wire   [0:0] or_ln192_3_fu_1676_p2;
wire   [0:0] and_ln192_2_fu_1682_p2;
wire   [0:0] grp_fu_328_p2;
wire   [0:0] and_ln192_3_fu_1688_p2;
wire   [31:0] bitcast_ln53_4_fu_1700_p1;
wire   [31:0] bitcast_ln53_5_fu_1717_p1;
wire   [7:0] tmp_49_fu_1703_p4;
wire   [22:0] trunc_ln53_4_fu_1713_p1;
wire   [7:0] tmp_50_fu_1720_p4;
wire   [22:0] trunc_ln53_5_fu_1730_p1;
wire   [31:0] bitcast_ln58_fu_1782_p1;
wire   [31:0] bitcast_ln58_1_fu_1800_p1;
wire   [7:0] tmp_52_fu_1786_p4;
wire   [22:0] trunc_ln58_fu_1796_p1;
wire   [7:0] tmp_53_fu_1803_p4;
wire   [22:0] trunc_ln58_1_fu_1813_p1;
wire   [31:0] bitcast_ln58_2_fu_1841_p1;
wire   [31:0] bitcast_ln58_3_fu_1859_p1;
wire   [7:0] tmp_55_fu_1845_p4;
wire   [22:0] trunc_ln58_2_fu_1855_p1;
wire   [7:0] tmp_56_fu_1862_p4;
wire   [22:0] trunc_ln58_3_fu_1872_p1;
wire   [0:0] or_ln53_4_fu_1910_p2;
wire   [0:0] or_ln53_5_fu_1914_p2;
wire   [0:0] and_ln53_4_fu_1918_p2;
wire   [0:0] grp_fu_332_p2;
wire   [0:0] and_ln53_5_fu_1924_p2;
wire   [0:0] or_ln58_fu_1936_p2;
wire   [0:0] or_ln58_1_fu_1940_p2;
wire   [0:0] and_ln58_fu_1944_p2;
wire   [0:0] grp_fu_336_p2;
wire   [0:0] and_ln58_1_fu_1950_p2;
wire   [0:0] or_ln58_2_fu_1962_p2;
wire   [0:0] or_ln58_3_fu_1966_p2;
wire   [0:0] and_ln58_2_fu_1970_p2;
wire   [0:0] grp_fu_340_p2;
wire   [0:0] xor_ln53_fu_1900_p2;
wire   [0:0] xor_ln40_fu_1986_p2;
wire   [0:0] xor_ln53_1_fu_1905_p2;
wire   [0:0] xor_ln40_1_fu_2001_p2;
wire   [0:0] xor_ln53_2_fu_1930_p2;
wire   [0:0] xor_ln40_2_fu_2016_p2;
wire   [0:0] and_ln53_6_fu_1991_p2;
wire   [0:0] and_ln41_16_fu_1997_p2;
wire   [0:0] or_ln53_6_fu_2027_p2;
wire   [0:0] and_ln41_15_fu_1982_p2;
wire   [0:0] and_ln41_17_fu_2012_p2;
wire   [0:0] and_ln53_8_fu_2021_p2;
wire   [0:0] or_ln53_8_fu_2039_p2;
wire   [0:0] and_ln53_7_fu_2006_p2;
wire   [0:0] or_ln53_9_fu_2045_p2;
wire   [0:0] or_ln53_7_fu_2033_p2;
wire   [0:0] and_ln53_11_fu_2073_p2;
wire   [0:0] and_ln41_18_fu_2078_p2;
wire   [0:0] or_ln53_12_fu_2088_p2;
wire   [0:0] or_ln53_11_fu_2068_p2;
wire   [0:0] or_ln53_13_fu_2093_p2;
wire   [0:0] xor_ln53_3_fu_2099_p2;
wire   [0:0] and_ln41_20_fu_2105_p2;
wire   [0:0] or_ln53_14_fu_2115_p2;
wire   [0:0] or_ln53_15_fu_2120_p2;
wire   [0:0] and_ln53_9_fu_2057_p2;
wire   [0:0] and_ln53_10_fu_2063_p2;
wire   [0:0] or_ln53_17_fu_2137_p2;
wire   [0:0] or_ln53_16_fu_2132_p2;
wire   [0:0] and_ln53_12_fu_2142_p2;
wire   [0:0] and_ln41_19_fu_2083_p2;
wire   [0:0] and_ln41_21_fu_2110_p2;
wire   [0:0] xor_ln53_4_fu_2126_p2;
wire   [0:0] or_ln53_18_fu_2159_p2;
wire   [0:0] and_ln53_14_fu_2153_p2;
wire   [0:0] or_ln53_19_fu_2165_p2;
wire   [0:0] and_ln53_13_fu_2147_p2;
wire   [0:0] or_ln53_20_fu_2171_p2;
wire   [0:0] xor_ln58_fu_1956_p2;
wire   [0:0] or_ln53_10_fu_2051_p2;
wire   [0:0] sel_tmp116_fu_2177_p2;
wire   [0:0] tmp140_demorgan_fu_2183_p2;
wire   [0:0] and_ln58_3_fu_1976_p2;
wire   [0:0] tmp140_fu_2189_p2;
reg    ap_block_pp0_stage0_00001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to13;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_0),
    .din1(ray_o_0),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_0),
    .din1(ray_o_0),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_1),
    .din1(ray_o_1),
    .ce(1'b1),
    .dout(grp_fu_194_p2)
);

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_1),
    .din1(ray_o_1),
    .ce(1'b1),
    .dout(grp_fu_200_p2)
);

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_2),
    .din1(ray_o_2),
    .ce(1'b1),
    .dout(grp_fu_206_p2)
);

rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fsub_32ns_32ns_32_4_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_2),
    .din1(ray_o_2),
    .ce(1'b1),
    .dout(grp_fu_212_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_reg_2458),
    .din1(ray_dRcp_0_read_reg_2225_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_218_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_2463),
    .din1(ray_dRcp_0_read_reg_2225_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_222_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_1_reg_2468),
    .din1(ray_dRcp_1_read_reg_2219_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_226_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_1_reg_2473),
    .din1(ray_dRcp_1_read_reg_2219_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_230_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_2_reg_2478),
    .din1(ray_dRcp_2_read_reg_2213_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_234_p2)
);

rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
rayIntersect_fmul_32ns_32ns_32_3_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_2_reg_2483),
    .din1(ray_dRcp_2_read_reg_2213_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_238_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ray_d_0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_242_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_0),
    .din1(ray_o_0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_248_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_0),
    .din1(ray_o_0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_254_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ray_d_1),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_260_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_1),
    .din1(ray_o_1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_266_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_1),
    .din1(ray_o_1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_272_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ray_d_2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_278_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(min_2),
    .din1(ray_o_2),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_284_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(max_2),
    .din1(ray_o_2),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_290_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_tmp_reg_2488),
    .din1(p_b_read_assign_reg_2496),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_296_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_tmp_1_reg_2504),
    .din1(p_b_read_assign_1_reg_2512),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_300_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln47_1_reg_2543),
    .din1(select_ln47_reg_2536),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_304_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln47_3_reg_2557),
    .din1(grp_fu_308_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_308_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_312_p0),
    .din1(select_ln47_2_reg_2550),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_312_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_tmp_2_reg_2520_pp0_iter8_reg),
    .din1(p_b_read_assign_2_reg_2528_pp0_iter8_reg),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_316_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln50_reg_2611),
    .din1(select_ln51_reg_2618),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_320_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln47_5_reg_2632),
    .din1(grp_fu_324_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_324_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_328_p0),
    .din1(select_ln47_4_reg_2625),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_328_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln50_1_reg_2691),
    .din1(select_ln51_1_reg_2698),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_332_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln41_5_fu_1775_p3),
    .din1(ray_mint_read_reg_2207_pp0_iter12_reg),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_336_p2)
);

rayIntersect_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
rayIntersect_fcmp_32ns_32ns_1_2_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln41_4_fu_1768_p3),
    .din1(ray_maxt_read_reg_2201_pp0_iter12_reg),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_340_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln40_1_reg_2428 <= and_ln40_1_fu_772_p2;
        and_ln40_2_reg_2443 <= and_ln40_2_fu_818_p2;
        and_ln40_reg_2414 <= and_ln40_fu_726_p2;
        icmp_ln40_1_reg_2287 <= icmp_ln40_1_fu_368_p2;
        icmp_ln40_2_reg_2330 <= icmp_ln40_2_fu_488_p2;
        icmp_ln40_3_reg_2335 <= icmp_ln40_3_fu_494_p2;
        icmp_ln40_4_reg_2378 <= icmp_ln40_4_fu_614_p2;
        icmp_ln40_5_reg_2383 <= icmp_ln40_5_fu_620_p2;
        icmp_ln40_reg_2282 <= icmp_ln40_fu_362_p2;
        icmp_ln41_10_reg_2356 <= icmp_ln41_10_fu_584_p2;
        icmp_ln41_11_reg_2361 <= icmp_ln41_11_fu_590_p2;
        icmp_ln41_12_reg_2388 <= icmp_ln41_12_fu_662_p2;
        icmp_ln41_13_reg_2393 <= icmp_ln41_13_fu_668_p2;
        icmp_ln41_16_reg_2404 <= icmp_ln41_16_fu_710_p2;
        icmp_ln41_17_reg_2409 <= icmp_ln41_17_fu_716_p2;
        icmp_ln41_1_reg_2297 <= icmp_ln41_1_fu_416_p2;
        icmp_ln41_4_reg_2308 <= icmp_ln41_4_fu_458_p2;
        icmp_ln41_5_reg_2313 <= icmp_ln41_5_fu_464_p2;
        icmp_ln41_6_reg_2340 <= icmp_ln41_6_fu_536_p2;
        icmp_ln41_7_reg_2345 <= icmp_ln41_7_fu_542_p2;
        icmp_ln41_reg_2292 <= icmp_ln41_fu_410_p2;
        or_ln41_10_reg_2398 <= or_ln41_10_fu_686_p2;
        or_ln41_1_reg_2437 <= or_ln41_1_fu_808_p2;
        or_ln41_2_reg_2452 <= or_ln41_2_fu_854_p2;
        or_ln41_4_reg_2302 <= or_ln41_4_fu_434_p2;
        or_ln41_7_reg_2350 <= or_ln41_7_fu_560_p2;
        or_ln41_reg_2422 <= or_ln41_fu_762_p2;
        ray_dRcp_0_read_reg_2225 <= ray_dRcp_0;
        ray_dRcp_0_read_reg_2225_pp0_iter1_reg <= ray_dRcp_0_read_reg_2225;
        ray_dRcp_1_read_reg_2219 <= ray_dRcp_1;
        ray_dRcp_1_read_reg_2219_pp0_iter1_reg <= ray_dRcp_1_read_reg_2219;
        ray_dRcp_2_read_reg_2213 <= ray_dRcp_2;
        ray_dRcp_2_read_reg_2213_pp0_iter1_reg <= ray_dRcp_2_read_reg_2213;
        ray_maxt_read_reg_2201 <= ray_maxt;
        ray_maxt_read_reg_2201_pp0_iter1_reg <= ray_maxt_read_reg_2201;
        ray_mint_read_reg_2207 <= ray_mint;
        ray_mint_read_reg_2207_pp0_iter1_reg <= ray_mint_read_reg_2207;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln40_1_reg_2428_pp0_iter10_reg <= and_ln40_1_reg_2428_pp0_iter9_reg;
        and_ln40_1_reg_2428_pp0_iter11_reg <= and_ln40_1_reg_2428_pp0_iter10_reg;
        and_ln40_1_reg_2428_pp0_iter12_reg <= and_ln40_1_reg_2428_pp0_iter11_reg;
        and_ln40_1_reg_2428_pp0_iter13_reg <= and_ln40_1_reg_2428_pp0_iter12_reg;
        and_ln40_1_reg_2428_pp0_iter2_reg <= and_ln40_1_reg_2428;
        and_ln40_1_reg_2428_pp0_iter3_reg <= and_ln40_1_reg_2428_pp0_iter2_reg;
        and_ln40_1_reg_2428_pp0_iter4_reg <= and_ln40_1_reg_2428_pp0_iter3_reg;
        and_ln40_1_reg_2428_pp0_iter5_reg <= and_ln40_1_reg_2428_pp0_iter4_reg;
        and_ln40_1_reg_2428_pp0_iter6_reg <= and_ln40_1_reg_2428_pp0_iter5_reg;
        and_ln40_1_reg_2428_pp0_iter7_reg <= and_ln40_1_reg_2428_pp0_iter6_reg;
        and_ln40_1_reg_2428_pp0_iter8_reg <= and_ln40_1_reg_2428_pp0_iter7_reg;
        and_ln40_1_reg_2428_pp0_iter9_reg <= and_ln40_1_reg_2428_pp0_iter8_reg;
        and_ln40_2_reg_2443_pp0_iter10_reg <= and_ln40_2_reg_2443_pp0_iter9_reg;
        and_ln40_2_reg_2443_pp0_iter11_reg <= and_ln40_2_reg_2443_pp0_iter10_reg;
        and_ln40_2_reg_2443_pp0_iter12_reg <= and_ln40_2_reg_2443_pp0_iter11_reg;
        and_ln40_2_reg_2443_pp0_iter13_reg <= and_ln40_2_reg_2443_pp0_iter12_reg;
        and_ln40_2_reg_2443_pp0_iter2_reg <= and_ln40_2_reg_2443;
        and_ln40_2_reg_2443_pp0_iter3_reg <= and_ln40_2_reg_2443_pp0_iter2_reg;
        and_ln40_2_reg_2443_pp0_iter4_reg <= and_ln40_2_reg_2443_pp0_iter3_reg;
        and_ln40_2_reg_2443_pp0_iter5_reg <= and_ln40_2_reg_2443_pp0_iter4_reg;
        and_ln40_2_reg_2443_pp0_iter6_reg <= and_ln40_2_reg_2443_pp0_iter5_reg;
        and_ln40_2_reg_2443_pp0_iter7_reg <= and_ln40_2_reg_2443_pp0_iter6_reg;
        and_ln40_2_reg_2443_pp0_iter8_reg <= and_ln40_2_reg_2443_pp0_iter7_reg;
        and_ln40_2_reg_2443_pp0_iter9_reg <= and_ln40_2_reg_2443_pp0_iter8_reg;
        and_ln40_reg_2414_pp0_iter10_reg <= and_ln40_reg_2414_pp0_iter9_reg;
        and_ln40_reg_2414_pp0_iter11_reg <= and_ln40_reg_2414_pp0_iter10_reg;
        and_ln40_reg_2414_pp0_iter12_reg <= and_ln40_reg_2414_pp0_iter11_reg;
        and_ln40_reg_2414_pp0_iter13_reg <= and_ln40_reg_2414_pp0_iter12_reg;
        and_ln40_reg_2414_pp0_iter2_reg <= and_ln40_reg_2414;
        and_ln40_reg_2414_pp0_iter3_reg <= and_ln40_reg_2414_pp0_iter2_reg;
        and_ln40_reg_2414_pp0_iter4_reg <= and_ln40_reg_2414_pp0_iter3_reg;
        and_ln40_reg_2414_pp0_iter5_reg <= and_ln40_reg_2414_pp0_iter4_reg;
        and_ln40_reg_2414_pp0_iter6_reg <= and_ln40_reg_2414_pp0_iter5_reg;
        and_ln40_reg_2414_pp0_iter7_reg <= and_ln40_reg_2414_pp0_iter6_reg;
        and_ln40_reg_2414_pp0_iter8_reg <= and_ln40_reg_2414_pp0_iter7_reg;
        and_ln40_reg_2414_pp0_iter9_reg <= and_ln40_reg_2414_pp0_iter8_reg;
        and_ln41_14_reg_2730 <= and_ln41_14_fu_1763_p2;
        and_ln41_4_reg_2584 <= and_ln41_4_fu_1111_p2;
        and_ln41_4_reg_2584_pp0_iter10_reg <= and_ln41_4_reg_2584;
        and_ln41_4_reg_2584_pp0_iter11_reg <= and_ln41_4_reg_2584_pp0_iter10_reg;
        and_ln41_4_reg_2584_pp0_iter12_reg <= and_ln41_4_reg_2584_pp0_iter11_reg;
        and_ln41_4_reg_2584_pp0_iter13_reg <= and_ln41_4_reg_2584_pp0_iter12_reg;
        and_ln41_9_reg_2664 <= and_ln41_9_fu_1485_p2;
        and_ln41_9_reg_2664_pp0_iter12_reg <= and_ln41_9_reg_2664;
        and_ln41_9_reg_2664_pp0_iter13_reg <= and_ln41_9_reg_2664_pp0_iter12_reg;
        and_ln53_1_reg_2605 <= and_ln53_1_fu_1146_p2;
        and_ln53_1_reg_2605_pp0_iter11_reg <= and_ln53_1_reg_2605;
        and_ln53_1_reg_2605_pp0_iter12_reg <= and_ln53_1_reg_2605_pp0_iter11_reg;
        and_ln53_1_reg_2605_pp0_iter13_reg <= and_ln53_1_reg_2605_pp0_iter12_reg;
        and_ln53_3_reg_2685 <= and_ln53_3_fu_1518_p2;
        and_ln53_3_reg_2685_pp0_iter13_reg <= and_ln53_3_reg_2685;
        icmp_ln53_10_reg_2715 <= icmp_ln53_10_fu_1746_p2;
        icmp_ln53_11_reg_2720 <= icmp_ln53_11_fu_1752_p2;
        icmp_ln53_1_reg_2569 <= icmp_ln53_1_fu_1088_p2;
        icmp_ln53_2_reg_2574 <= icmp_ln53_2_fu_1094_p2;
        icmp_ln53_3_reg_2579 <= icmp_ln53_3_fu_1100_p2;
        icmp_ln53_4_reg_2639 <= icmp_ln53_4_fu_1456_p2;
        icmp_ln53_5_reg_2644 <= icmp_ln53_5_fu_1462_p2;
        icmp_ln53_6_reg_2649 <= icmp_ln53_6_fu_1468_p2;
        icmp_ln53_7_reg_2654 <= icmp_ln53_7_fu_1474_p2;
        icmp_ln53_8_reg_2705 <= icmp_ln53_8_fu_1734_p2;
        icmp_ln53_9_reg_2710 <= icmp_ln53_9_fu_1740_p2;
        icmp_ln53_reg_2564 <= icmp_ln53_fu_1082_p2;
        icmp_ln58_1_reg_2750 <= icmp_ln58_1_fu_1823_p2;
        icmp_ln58_2_reg_2755 <= icmp_ln58_2_fu_1829_p2;
        icmp_ln58_3_reg_2760 <= icmp_ln58_3_fu_1835_p2;
        icmp_ln58_4_reg_2765 <= icmp_ln58_4_fu_1876_p2;
        icmp_ln58_5_reg_2770 <= icmp_ln58_5_fu_1882_p2;
        icmp_ln58_6_reg_2775 <= icmp_ln58_6_fu_1888_p2;
        icmp_ln58_7_reg_2780 <= icmp_ln58_7_fu_1894_p2;
        icmp_ln58_reg_2745 <= icmp_ln58_fu_1817_p2;
        or_ln41_1_reg_2437_pp0_iter10_reg <= or_ln41_1_reg_2437_pp0_iter9_reg;
        or_ln41_1_reg_2437_pp0_iter11_reg <= or_ln41_1_reg_2437_pp0_iter10_reg;
        or_ln41_1_reg_2437_pp0_iter12_reg <= or_ln41_1_reg_2437_pp0_iter11_reg;
        or_ln41_1_reg_2437_pp0_iter13_reg <= or_ln41_1_reg_2437_pp0_iter12_reg;
        or_ln41_1_reg_2437_pp0_iter2_reg <= or_ln41_1_reg_2437;
        or_ln41_1_reg_2437_pp0_iter3_reg <= or_ln41_1_reg_2437_pp0_iter2_reg;
        or_ln41_1_reg_2437_pp0_iter4_reg <= or_ln41_1_reg_2437_pp0_iter3_reg;
        or_ln41_1_reg_2437_pp0_iter5_reg <= or_ln41_1_reg_2437_pp0_iter4_reg;
        or_ln41_1_reg_2437_pp0_iter6_reg <= or_ln41_1_reg_2437_pp0_iter5_reg;
        or_ln41_1_reg_2437_pp0_iter7_reg <= or_ln41_1_reg_2437_pp0_iter6_reg;
        or_ln41_1_reg_2437_pp0_iter8_reg <= or_ln41_1_reg_2437_pp0_iter7_reg;
        or_ln41_1_reg_2437_pp0_iter9_reg <= or_ln41_1_reg_2437_pp0_iter8_reg;
        or_ln41_2_reg_2452_pp0_iter10_reg <= or_ln41_2_reg_2452_pp0_iter9_reg;
        or_ln41_2_reg_2452_pp0_iter11_reg <= or_ln41_2_reg_2452_pp0_iter10_reg;
        or_ln41_2_reg_2452_pp0_iter12_reg <= or_ln41_2_reg_2452_pp0_iter11_reg;
        or_ln41_2_reg_2452_pp0_iter13_reg <= or_ln41_2_reg_2452_pp0_iter12_reg;
        or_ln41_2_reg_2452_pp0_iter2_reg <= or_ln41_2_reg_2452;
        or_ln41_2_reg_2452_pp0_iter3_reg <= or_ln41_2_reg_2452_pp0_iter2_reg;
        or_ln41_2_reg_2452_pp0_iter4_reg <= or_ln41_2_reg_2452_pp0_iter3_reg;
        or_ln41_2_reg_2452_pp0_iter5_reg <= or_ln41_2_reg_2452_pp0_iter4_reg;
        or_ln41_2_reg_2452_pp0_iter6_reg <= or_ln41_2_reg_2452_pp0_iter5_reg;
        or_ln41_2_reg_2452_pp0_iter7_reg <= or_ln41_2_reg_2452_pp0_iter6_reg;
        or_ln41_2_reg_2452_pp0_iter8_reg <= or_ln41_2_reg_2452_pp0_iter7_reg;
        or_ln41_2_reg_2452_pp0_iter9_reg <= or_ln41_2_reg_2452_pp0_iter8_reg;
        or_ln41_reg_2422_pp0_iter10_reg <= or_ln41_reg_2422_pp0_iter9_reg;
        or_ln41_reg_2422_pp0_iter11_reg <= or_ln41_reg_2422_pp0_iter10_reg;
        or_ln41_reg_2422_pp0_iter12_reg <= or_ln41_reg_2422_pp0_iter11_reg;
        or_ln41_reg_2422_pp0_iter13_reg <= or_ln41_reg_2422_pp0_iter12_reg;
        or_ln41_reg_2422_pp0_iter2_reg <= or_ln41_reg_2422;
        or_ln41_reg_2422_pp0_iter3_reg <= or_ln41_reg_2422_pp0_iter2_reg;
        or_ln41_reg_2422_pp0_iter4_reg <= or_ln41_reg_2422_pp0_iter3_reg;
        or_ln41_reg_2422_pp0_iter5_reg <= or_ln41_reg_2422_pp0_iter4_reg;
        or_ln41_reg_2422_pp0_iter6_reg <= or_ln41_reg_2422_pp0_iter5_reg;
        or_ln41_reg_2422_pp0_iter7_reg <= or_ln41_reg_2422_pp0_iter6_reg;
        or_ln41_reg_2422_pp0_iter8_reg <= or_ln41_reg_2422_pp0_iter7_reg;
        or_ln41_reg_2422_pp0_iter9_reg <= or_ln41_reg_2422_pp0_iter8_reg;
        p_b_read_assign_1_reg_2512 <= grp_fu_230_p2;
        p_b_read_assign_1_reg_2512_pp0_iter7_reg <= p_b_read_assign_1_reg_2512;
        p_b_read_assign_2_reg_2528 <= grp_fu_238_p2;
        p_b_read_assign_2_reg_2528_pp0_iter7_reg <= p_b_read_assign_2_reg_2528;
        p_b_read_assign_2_reg_2528_pp0_iter8_reg <= p_b_read_assign_2_reg_2528_pp0_iter7_reg;
        p_b_read_assign_2_reg_2528_pp0_iter9_reg <= p_b_read_assign_2_reg_2528_pp0_iter8_reg;
        p_b_read_assign_reg_2496 <= grp_fu_222_p2;
        p_b_read_assign_reg_2496_pp0_iter7_reg <= p_b_read_assign_reg_2496;
        p_tmp_1_reg_2504 <= grp_fu_226_p2;
        p_tmp_1_reg_2504_pp0_iter7_reg <= p_tmp_1_reg_2504;
        p_tmp_2_reg_2520 <= grp_fu_234_p2;
        p_tmp_2_reg_2520_pp0_iter7_reg <= p_tmp_2_reg_2520;
        p_tmp_2_reg_2520_pp0_iter8_reg <= p_tmp_2_reg_2520_pp0_iter7_reg;
        p_tmp_2_reg_2520_pp0_iter9_reg <= p_tmp_2_reg_2520_pp0_iter8_reg;
        p_tmp_reg_2488 <= grp_fu_218_p2;
        p_tmp_reg_2488_pp0_iter7_reg <= p_tmp_reg_2488;
        ray_dRcp_0_read_reg_2225_pp0_iter2_reg <= ray_dRcp_0_read_reg_2225_pp0_iter1_reg;
        ray_dRcp_0_read_reg_2225_pp0_iter3_reg <= ray_dRcp_0_read_reg_2225_pp0_iter2_reg;
        ray_dRcp_1_read_reg_2219_pp0_iter2_reg <= ray_dRcp_1_read_reg_2219_pp0_iter1_reg;
        ray_dRcp_1_read_reg_2219_pp0_iter3_reg <= ray_dRcp_1_read_reg_2219_pp0_iter2_reg;
        ray_dRcp_2_read_reg_2213_pp0_iter2_reg <= ray_dRcp_2_read_reg_2213_pp0_iter1_reg;
        ray_dRcp_2_read_reg_2213_pp0_iter3_reg <= ray_dRcp_2_read_reg_2213_pp0_iter2_reg;
        ray_maxt_read_reg_2201_pp0_iter10_reg <= ray_maxt_read_reg_2201_pp0_iter9_reg;
        ray_maxt_read_reg_2201_pp0_iter11_reg <= ray_maxt_read_reg_2201_pp0_iter10_reg;
        ray_maxt_read_reg_2201_pp0_iter12_reg <= ray_maxt_read_reg_2201_pp0_iter11_reg;
        ray_maxt_read_reg_2201_pp0_iter2_reg <= ray_maxt_read_reg_2201_pp0_iter1_reg;
        ray_maxt_read_reg_2201_pp0_iter3_reg <= ray_maxt_read_reg_2201_pp0_iter2_reg;
        ray_maxt_read_reg_2201_pp0_iter4_reg <= ray_maxt_read_reg_2201_pp0_iter3_reg;
        ray_maxt_read_reg_2201_pp0_iter5_reg <= ray_maxt_read_reg_2201_pp0_iter4_reg;
        ray_maxt_read_reg_2201_pp0_iter6_reg <= ray_maxt_read_reg_2201_pp0_iter5_reg;
        ray_maxt_read_reg_2201_pp0_iter7_reg <= ray_maxt_read_reg_2201_pp0_iter6_reg;
        ray_maxt_read_reg_2201_pp0_iter8_reg <= ray_maxt_read_reg_2201_pp0_iter7_reg;
        ray_maxt_read_reg_2201_pp0_iter9_reg <= ray_maxt_read_reg_2201_pp0_iter8_reg;
        ray_mint_read_reg_2207_pp0_iter10_reg <= ray_mint_read_reg_2207_pp0_iter9_reg;
        ray_mint_read_reg_2207_pp0_iter11_reg <= ray_mint_read_reg_2207_pp0_iter10_reg;
        ray_mint_read_reg_2207_pp0_iter12_reg <= ray_mint_read_reg_2207_pp0_iter11_reg;
        ray_mint_read_reg_2207_pp0_iter2_reg <= ray_mint_read_reg_2207_pp0_iter1_reg;
        ray_mint_read_reg_2207_pp0_iter3_reg <= ray_mint_read_reg_2207_pp0_iter2_reg;
        ray_mint_read_reg_2207_pp0_iter4_reg <= ray_mint_read_reg_2207_pp0_iter3_reg;
        ray_mint_read_reg_2207_pp0_iter5_reg <= ray_mint_read_reg_2207_pp0_iter4_reg;
        ray_mint_read_reg_2207_pp0_iter6_reg <= ray_mint_read_reg_2207_pp0_iter5_reg;
        ray_mint_read_reg_2207_pp0_iter7_reg <= ray_mint_read_reg_2207_pp0_iter6_reg;
        ray_mint_read_reg_2207_pp0_iter8_reg <= ray_mint_read_reg_2207_pp0_iter7_reg;
        ray_mint_read_reg_2207_pp0_iter9_reg <= ray_mint_read_reg_2207_pp0_iter8_reg;
        select_ln41_1_reg_2597 <= select_ln41_1_fu_1124_p3;
        select_ln41_1_reg_2597_pp0_iter10_reg <= select_ln41_1_reg_2597;
        select_ln41_2_reg_2669 <= select_ln41_2_fu_1490_p3;
        select_ln41_2_reg_2669_pp0_iter12_reg <= select_ln41_2_reg_2669;
        select_ln41_3_reg_2677 <= select_ln41_3_fu_1497_p3;
        select_ln41_3_reg_2677_pp0_iter12_reg <= select_ln41_3_reg_2677;
        select_ln41_reg_2589 <= select_ln41_fu_1116_p3;
        select_ln41_reg_2589_pp0_iter10_reg <= select_ln41_reg_2589;
        select_ln47_1_reg_2543 <= select_ln47_1_fu_948_p3;
        select_ln47_2_reg_2550 <= select_ln47_2_fu_1036_p3;
        select_ln47_2_reg_2550_pp0_iter9_reg <= select_ln47_2_reg_2550;
        select_ln47_3_reg_2557 <= select_ln47_3_fu_1042_p3;
        select_ln47_3_reg_2557_pp0_iter9_reg <= select_ln47_3_reg_2557;
        select_ln47_4_reg_2625 <= select_ln47_4_fu_1410_p3;
        select_ln47_4_reg_2625_pp0_iter11_reg <= select_ln47_4_reg_2625;
        select_ln47_5_reg_2632 <= select_ln47_5_fu_1416_p3;
        select_ln47_5_reg_2632_pp0_iter11_reg <= select_ln47_5_reg_2632;
        select_ln47_reg_2536 <= select_ln47_fu_942_p3;
        select_ln50_1_reg_2691 <= select_ln50_1_fu_1606_p3;
        select_ln50_reg_2611 <= select_ln50_fu_1234_p3;
        select_ln51_1_reg_2698 <= select_ln51_1_fu_1694_p3;
        select_ln51_reg_2618 <= select_ln51_fu_1322_p3;
        tmp_5_1_reg_2468 <= grp_fu_194_p2;
        tmp_5_2_reg_2478 <= grp_fu_206_p2;
        tmp_5_reg_2458 <= grp_fu_182_p2;
        tmp_7_1_reg_2473 <= grp_fu_200_p2;
        tmp_7_2_reg_2483 <= grp_fu_212_p2;
        tmp_7_reg_2463 <= grp_fu_188_p2;
        xor_ln41_1_reg_2659 <= xor_ln41_1_fu_1480_p2;
        xor_ln41_1_reg_2659_pp0_iter12_reg <= xor_ln41_1_reg_2659;
        xor_ln41_1_reg_2659_pp0_iter13_reg <= xor_ln41_1_reg_2659_pp0_iter12_reg;
        xor_ln41_2_reg_2725 <= xor_ln41_2_fu_1758_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to13 = 1'b1;
    end else begin
        ap_idle_pp0_0to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln192_1_fu_1316_p2 = (grp_fu_312_p2 & and_ln192_fu_1310_p2);

assign and_ln192_2_fu_1682_p2 = (or_ln192_3_fu_1676_p2 & or_ln192_2_fu_1658_p2);

assign and_ln192_3_fu_1688_p2 = (grp_fu_328_p2 & and_ln192_2_fu_1682_p2);

assign and_ln192_fu_1310_p2 = (or_ln192_fu_1286_p2 & or_ln192_1_fu_1304_p2);

assign and_ln215_1_fu_1228_p2 = (grp_fu_308_p2 & and_ln215_fu_1222_p2);

assign and_ln215_2_fu_1594_p2 = (or_ln215_3_fu_1588_p2 & or_ln215_2_fu_1570_p2);

assign and_ln215_3_fu_1600_p2 = (grp_fu_324_p2 & and_ln215_2_fu_1594_p2);

assign and_ln215_fu_1222_p2 = (or_ln215_fu_1198_p2 & or_ln215_1_fu_1216_p2);

assign and_ln40_1_fu_772_p2 = (or_ln40_1_fu_768_p2 & grp_fu_260_p2);

assign and_ln40_2_fu_818_p2 = (or_ln40_2_fu_814_p2 & grp_fu_278_p2);

assign and_ln40_fu_726_p2 = (or_ln40_fu_722_p2 & grp_fu_242_p2);

assign and_ln41_10_fu_828_p2 = (or_ln41_9_fu_824_p2 & or_ln41_10_reg_2398);

assign and_ln41_11_fu_833_p2 = (grp_fu_284_p2 & and_ln41_10_fu_828_p2);

assign and_ln41_12_fu_843_p2 = (or_ln41_11_fu_839_p2 & or_ln41_10_reg_2398);

assign and_ln41_13_fu_848_p2 = (grp_fu_290_p2 & and_ln41_12_fu_843_p2);

assign and_ln41_14_fu_1763_p2 = (xor_ln41_2_fu_1758_p2 & and_ln40_2_reg_2443_pp0_iter12_reg);

assign and_ln41_15_fu_1982_p2 = (or_ln41_reg_2422_pp0_iter13_reg & and_ln40_reg_2414_pp0_iter13_reg);

assign and_ln41_16_fu_1997_p2 = (or_ln41_1_reg_2437_pp0_iter13_reg & and_ln40_1_reg_2428_pp0_iter13_reg);

assign and_ln41_17_fu_2012_p2 = (or_ln41_2_reg_2452_pp0_iter13_reg & and_ln40_2_reg_2443_pp0_iter13_reg);

assign and_ln41_18_fu_2078_p2 = (xor_ln41_1_reg_2659_pp0_iter13_reg & and_ln53_11_fu_2073_p2);

assign and_ln41_19_fu_2083_p2 = (and_ln41_18_fu_2078_p2 & and_ln40_1_reg_2428_pp0_iter13_reg);

assign and_ln41_1_fu_741_p2 = (grp_fu_248_p2 & and_ln41_fu_736_p2);

assign and_ln41_20_fu_2105_p2 = (xor_ln53_3_fu_2099_p2 & xor_ln41_2_reg_2725);

assign and_ln41_21_fu_2110_p2 = (and_ln41_20_fu_2105_p2 & and_ln40_2_reg_2443_pp0_iter13_reg);

assign and_ln41_2_fu_751_p2 = (or_ln41_5_fu_747_p2 & or_ln41_4_reg_2302);

assign and_ln41_3_fu_756_p2 = (grp_fu_254_p2 & and_ln41_2_fu_751_p2);

assign and_ln41_4_fu_1111_p2 = (xor_ln41_fu_1106_p2 & and_ln40_reg_2414_pp0_iter8_reg);

assign and_ln41_5_fu_782_p2 = (or_ln41_7_reg_2350 & or_ln41_6_fu_778_p2);

assign and_ln41_6_fu_787_p2 = (grp_fu_266_p2 & and_ln41_5_fu_782_p2);

assign and_ln41_7_fu_797_p2 = (or_ln41_8_fu_793_p2 & or_ln41_7_reg_2350);

assign and_ln41_8_fu_802_p2 = (grp_fu_272_p2 & and_ln41_7_fu_797_p2);

assign and_ln41_9_fu_1485_p2 = (xor_ln41_1_fu_1480_p2 & and_ln40_1_reg_2428_pp0_iter10_reg);

assign and_ln41_fu_736_p2 = (or_ln41_4_reg_2302 & or_ln41_3_fu_732_p2);

assign and_ln47_1_fu_936_p2 = (grp_fu_296_p2 & and_ln47_fu_930_p2);

assign and_ln47_2_fu_1024_p2 = (or_ln47_3_fu_1018_p2 & or_ln47_2_fu_1000_p2);

assign and_ln47_3_fu_1030_p2 = (grp_fu_300_p2 & and_ln47_2_fu_1024_p2);

assign and_ln47_4_fu_1398_p2 = (or_ln47_5_fu_1392_p2 & or_ln47_4_fu_1374_p2);

assign and_ln47_5_fu_1404_p2 = (grp_fu_316_p2 & and_ln47_4_fu_1398_p2);

assign and_ln47_fu_930_p2 = (or_ln47_fu_906_p2 & or_ln47_1_fu_924_p2);

assign and_ln53_10_fu_2063_p2 = (xor_ln40_1_fu_2001_p2 & and_ln53_3_reg_2685_pp0_iter13_reg);

assign and_ln53_11_fu_2073_p2 = (xor_ln40_fu_1986_p2 & and_ln53_1_reg_2605_pp0_iter13_reg);

assign and_ln53_12_fu_2142_p2 = (or_ln53_17_fu_2137_p2 & and_ln41_4_reg_2584_pp0_iter13_reg);

assign and_ln53_13_fu_2147_p2 = (or_ln53_16_fu_2132_p2 & and_ln53_12_fu_2142_p2);

assign and_ln53_14_fu_2153_p2 = (or_ln53_16_fu_2132_p2 & and_ln41_19_fu_2083_p2);

assign and_ln53_1_fu_1146_p2 = (grp_fu_304_p2 & and_ln53_fu_1140_p2);

assign and_ln53_2_fu_1512_p2 = (or_ln53_3_fu_1508_p2 & or_ln53_2_fu_1504_p2);

assign and_ln53_3_fu_1518_p2 = (grp_fu_320_p2 & and_ln53_2_fu_1512_p2);

assign and_ln53_4_fu_1918_p2 = (or_ln53_5_fu_1914_p2 & or_ln53_4_fu_1910_p2);

assign and_ln53_5_fu_1924_p2 = (grp_fu_332_p2 & and_ln53_4_fu_1918_p2);

assign and_ln53_6_fu_1991_p2 = (xor_ln53_fu_1900_p2 & xor_ln40_fu_1986_p2);

assign and_ln53_7_fu_2006_p2 = (xor_ln53_1_fu_1905_p2 & xor_ln40_1_fu_2001_p2);

assign and_ln53_8_fu_2021_p2 = (xor_ln53_2_fu_1930_p2 & xor_ln40_2_fu_2016_p2);

assign and_ln53_9_fu_2057_p2 = (xor_ln40_2_fu_2016_p2 & and_ln53_5_fu_1924_p2);

assign and_ln53_fu_1140_p2 = (or_ln53_fu_1132_p2 & or_ln53_1_fu_1136_p2);

assign and_ln58_1_fu_1950_p2 = (grp_fu_336_p2 & and_ln58_fu_1944_p2);

assign and_ln58_2_fu_1970_p2 = (or_ln58_3_fu_1966_p2 & or_ln58_2_fu_1962_p2);

assign and_ln58_3_fu_1976_p2 = (grp_fu_340_p2 & and_ln58_2_fu_1970_p2);

assign and_ln58_fu_1944_p2 = (or_ln58_fu_1936_p2 & or_ln58_1_fu_1940_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = (tmp140_fu_2189_p2 & and_ln58_3_fu_1976_p2);

assign bitcast_ln192_1_fu_1257_p1 = select_ln47_2_reg_2550_pp0_iter9_reg;

assign bitcast_ln192_2_fu_1612_p1 = select_ln41_3_reg_2677;

assign bitcast_ln192_3_fu_1629_p1 = select_ln47_4_reg_2625_pp0_iter11_reg;

assign bitcast_ln192_fu_1240_p1 = select_ln41_1_reg_2597;

assign bitcast_ln215_1_fu_1169_p1 = select_ln41_reg_2589;

assign bitcast_ln215_2_fu_1524_p1 = select_ln47_5_reg_2632_pp0_iter11_reg;

assign bitcast_ln215_3_fu_1541_p1 = select_ln41_2_reg_2669;

assign bitcast_ln215_fu_1152_p1 = select_ln47_3_reg_2557_pp0_iter9_reg;

assign bitcast_ln40_1_fu_470_p1 = ray_d_1;

assign bitcast_ln40_2_fu_596_p1 = ray_d_2;

assign bitcast_ln40_fu_344_p1 = ray_d_0;

assign bitcast_ln41_1_fu_392_p1 = ray_o_0;

assign bitcast_ln41_2_fu_440_p1 = max_0;

assign bitcast_ln41_3_fu_500_p1 = min_1;

assign bitcast_ln41_4_fu_518_p1 = ray_o_1;

assign bitcast_ln41_5_fu_566_p1 = max_1;

assign bitcast_ln41_6_fu_626_p1 = min_2;

assign bitcast_ln41_7_fu_644_p1 = ray_o_2;

assign bitcast_ln41_8_fu_692_p1 = max_2;

assign bitcast_ln41_fu_374_p1 = min_0;

assign bitcast_ln47_1_fu_877_p1 = p_b_read_assign_reg_2496_pp0_iter7_reg;

assign bitcast_ln47_2_fu_954_p1 = p_tmp_1_reg_2504_pp0_iter7_reg;

assign bitcast_ln47_3_fu_971_p1 = p_b_read_assign_1_reg_2512_pp0_iter7_reg;

assign bitcast_ln47_4_fu_1328_p1 = p_tmp_2_reg_2520_pp0_iter9_reg;

assign bitcast_ln47_5_fu_1345_p1 = p_b_read_assign_2_reg_2528_pp0_iter9_reg;

assign bitcast_ln47_fu_860_p1 = p_tmp_reg_2488_pp0_iter7_reg;

assign bitcast_ln53_1_fu_1065_p1 = select_ln47_reg_2536;

assign bitcast_ln53_2_fu_1422_p1 = select_ln50_reg_2611;

assign bitcast_ln53_3_fu_1439_p1 = select_ln51_reg_2618;

assign bitcast_ln53_4_fu_1700_p1 = select_ln50_1_reg_2691;

assign bitcast_ln53_5_fu_1717_p1 = select_ln51_1_reg_2698;

assign bitcast_ln53_fu_1048_p1 = select_ln47_1_reg_2543;

assign bitcast_ln58_1_fu_1800_p1 = ray_mint_read_reg_2207_pp0_iter12_reg;

assign bitcast_ln58_2_fu_1841_p1 = select_ln41_4_fu_1768_p3;

assign bitcast_ln58_3_fu_1859_p1 = ray_maxt_read_reg_2201_pp0_iter12_reg;

assign bitcast_ln58_fu_1782_p1 = select_ln41_5_fu_1775_p3;

assign grp_fu_308_p1 = ((and_ln41_4_fu_1111_p2[0:0] === 1'b1) ? 32'd4286578688 : select_ln47_1_reg_2543);

assign grp_fu_312_p0 = ((and_ln41_4_fu_1111_p2[0:0] === 1'b1) ? 32'd2139095040 : select_ln47_reg_2536);

assign grp_fu_324_p1 = ((and_ln41_9_fu_1485_p2[0:0] === 1'b1) ? select_ln41_reg_2589_pp0_iter10_reg : select_ln50_reg_2611);

assign grp_fu_328_p0 = ((and_ln41_9_fu_1485_p2[0:0] === 1'b1) ? select_ln41_1_reg_2597_pp0_iter10_reg : select_ln51_reg_2618);

assign icmp_ln192_1_fu_1280_p2 = ((trunc_ln192_fu_1253_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_2_fu_1292_p2 = ((tmp_28_fu_1260_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln192_3_fu_1298_p2 = ((trunc_ln192_1_fu_1270_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_4_fu_1646_p2 = ((tmp_46_fu_1615_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln192_5_fu_1652_p2 = ((trunc_ln192_2_fu_1625_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_6_fu_1664_p2 = ((tmp_47_fu_1632_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln192_7_fu_1670_p2 = ((trunc_ln192_3_fu_1642_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_1274_p2 = ((tmp_27_fu_1243_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln215_1_fu_1192_p2 = ((trunc_ln215_fu_1165_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_2_fu_1204_p2 = ((tmp_25_fu_1172_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln215_3_fu_1210_p2 = ((trunc_ln215_1_fu_1182_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_4_fu_1558_p2 = ((tmp_43_fu_1527_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln215_5_fu_1564_p2 = ((trunc_ln215_2_fu_1537_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_6_fu_1576_p2 = ((tmp_44_fu_1544_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln215_7_fu_1582_p2 = ((trunc_ln215_3_fu_1554_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1186_p2 = ((tmp_24_fu_1155_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln40_1_fu_368_p2 = ((trunc_ln40_fu_358_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_2_fu_488_p2 = ((tmp_14_fu_474_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln40_3_fu_494_p2 = ((trunc_ln40_1_fu_484_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_4_fu_614_p2 = ((tmp_33_fu_600_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln40_5_fu_620_p2 = ((trunc_ln40_2_fu_610_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_362_p2 = ((tmp_fu_348_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_10_fu_584_p2 = ((tmp_19_fu_570_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_11_fu_590_p2 = ((trunc_ln41_5_fu_580_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_12_fu_662_p2 = ((tmp_35_fu_630_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_13_fu_668_p2 = ((trunc_ln41_6_fu_640_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_14_fu_674_p2 = ((tmp_36_fu_648_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_15_fu_680_p2 = ((trunc_ln41_7_fu_658_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_16_fu_710_p2 = ((tmp_38_fu_696_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_17_fu_716_p2 = ((trunc_ln41_8_fu_706_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_416_p2 = ((trunc_ln41_fu_388_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_2_fu_422_p2 = ((tmp_3_fu_396_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_3_fu_428_p2 = ((trunc_ln41_1_fu_406_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_4_fu_458_p2 = ((tmp_6_fu_444_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_5_fu_464_p2 = ((trunc_ln41_2_fu_454_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_6_fu_536_p2 = ((tmp_16_fu_504_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_7_fu_542_p2 = ((trunc_ln41_3_fu_514_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_8_fu_548_p2 = ((tmp_17_fu_522_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln41_9_fu_554_p2 = ((trunc_ln41_4_fu_532_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_410_p2 = ((tmp_2_fu_378_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_10_fu_1380_p2 = ((tmp_41_fu_1348_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_11_fu_1386_p2 = ((trunc_ln47_5_fu_1358_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_900_p2 = ((trunc_ln47_fu_873_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_2_fu_912_p2 = ((tmp_8_fu_880_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_3_fu_918_p2 = ((trunc_ln47_1_fu_890_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_4_fu_988_p2 = ((tmp_21_fu_957_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_5_fu_994_p2 = ((trunc_ln47_2_fu_967_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_6_fu_1006_p2 = ((tmp_22_fu_974_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_7_fu_1012_p2 = ((trunc_ln47_3_fu_984_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_8_fu_1362_p2 = ((tmp_40_fu_1331_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_9_fu_1368_p2 = ((trunc_ln47_4_fu_1341_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_894_p2 = ((tmp_s_fu_863_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_10_fu_1746_p2 = ((tmp_50_fu_1720_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_11_fu_1752_p2 = ((trunc_ln53_5_fu_1730_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_1_fu_1088_p2 = ((trunc_ln53_fu_1061_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_2_fu_1094_p2 = ((tmp_12_fu_1068_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_3_fu_1100_p2 = ((trunc_ln53_1_fu_1078_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_4_fu_1456_p2 = ((tmp_30_fu_1425_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_5_fu_1462_p2 = ((trunc_ln53_2_fu_1435_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_6_fu_1468_p2 = ((tmp_31_fu_1442_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_7_fu_1474_p2 = ((trunc_ln53_3_fu_1452_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_8_fu_1734_p2 = ((tmp_49_fu_1703_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_9_fu_1740_p2 = ((trunc_ln53_4_fu_1713_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1082_p2 = ((tmp_11_fu_1051_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln58_1_fu_1823_p2 = ((trunc_ln58_fu_1796_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_2_fu_1829_p2 = ((tmp_53_fu_1803_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln58_3_fu_1835_p2 = ((trunc_ln58_1_fu_1813_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_4_fu_1876_p2 = ((tmp_55_fu_1845_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln58_5_fu_1882_p2 = ((trunc_ln58_2_fu_1855_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_6_fu_1888_p2 = ((tmp_56_fu_1862_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln58_7_fu_1894_p2 = ((trunc_ln58_3_fu_1872_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1817_p2 = ((tmp_52_fu_1786_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln192_1_fu_1304_p2 = (icmp_ln192_3_fu_1298_p2 | icmp_ln192_2_fu_1292_p2);

assign or_ln192_2_fu_1658_p2 = (icmp_ln192_5_fu_1652_p2 | icmp_ln192_4_fu_1646_p2);

assign or_ln192_3_fu_1676_p2 = (icmp_ln192_7_fu_1670_p2 | icmp_ln192_6_fu_1664_p2);

assign or_ln192_fu_1286_p2 = (icmp_ln192_fu_1274_p2 | icmp_ln192_1_fu_1280_p2);

assign or_ln215_1_fu_1216_p2 = (icmp_ln215_3_fu_1210_p2 | icmp_ln215_2_fu_1204_p2);

assign or_ln215_2_fu_1570_p2 = (icmp_ln215_5_fu_1564_p2 | icmp_ln215_4_fu_1558_p2);

assign or_ln215_3_fu_1588_p2 = (icmp_ln215_7_fu_1582_p2 | icmp_ln215_6_fu_1576_p2);

assign or_ln215_fu_1198_p2 = (icmp_ln215_fu_1186_p2 | icmp_ln215_1_fu_1192_p2);

assign or_ln40_1_fu_768_p2 = (icmp_ln40_3_reg_2335 | icmp_ln40_2_reg_2330);

assign or_ln40_2_fu_814_p2 = (icmp_ln40_5_reg_2383 | icmp_ln40_4_reg_2378);

assign or_ln40_fu_722_p2 = (icmp_ln40_reg_2282 | icmp_ln40_1_reg_2287);

assign or_ln41_10_fu_686_p2 = (icmp_ln41_15_fu_680_p2 | icmp_ln41_14_fu_674_p2);

assign or_ln41_11_fu_839_p2 = (icmp_ln41_17_reg_2409 | icmp_ln41_16_reg_2404);

assign or_ln41_1_fu_808_p2 = (and_ln41_8_fu_802_p2 | and_ln41_6_fu_787_p2);

assign or_ln41_2_fu_854_p2 = (and_ln41_13_fu_848_p2 | and_ln41_11_fu_833_p2);

assign or_ln41_3_fu_732_p2 = (icmp_ln41_reg_2292 | icmp_ln41_1_reg_2297);

assign or_ln41_4_fu_434_p2 = (icmp_ln41_3_fu_428_p2 | icmp_ln41_2_fu_422_p2);

assign or_ln41_5_fu_747_p2 = (icmp_ln41_5_reg_2313 | icmp_ln41_4_reg_2308);

assign or_ln41_6_fu_778_p2 = (icmp_ln41_7_reg_2345 | icmp_ln41_6_reg_2340);

assign or_ln41_7_fu_560_p2 = (icmp_ln41_9_fu_554_p2 | icmp_ln41_8_fu_548_p2);

assign or_ln41_8_fu_793_p2 = (icmp_ln41_11_reg_2361 | icmp_ln41_10_reg_2356);

assign or_ln41_9_fu_824_p2 = (icmp_ln41_13_reg_2393 | icmp_ln41_12_reg_2388);

assign or_ln41_fu_762_p2 = (and_ln41_3_fu_756_p2 | and_ln41_1_fu_741_p2);

assign or_ln47_1_fu_924_p2 = (icmp_ln47_3_fu_918_p2 | icmp_ln47_2_fu_912_p2);

assign or_ln47_2_fu_1000_p2 = (icmp_ln47_5_fu_994_p2 | icmp_ln47_4_fu_988_p2);

assign or_ln47_3_fu_1018_p2 = (icmp_ln47_7_fu_1012_p2 | icmp_ln47_6_fu_1006_p2);

assign or_ln47_4_fu_1374_p2 = (icmp_ln47_9_fu_1368_p2 | icmp_ln47_8_fu_1362_p2);

assign or_ln47_5_fu_1392_p2 = (icmp_ln47_11_fu_1386_p2 | icmp_ln47_10_fu_1380_p2);

assign or_ln47_fu_906_p2 = (icmp_ln47_fu_894_p2 | icmp_ln47_1_fu_900_p2);

assign or_ln53_10_fu_2051_p2 = (or_ln53_9_fu_2045_p2 | or_ln53_7_fu_2033_p2);

assign or_ln53_11_fu_2068_p2 = (xor_ln53_fu_1900_p2 | and_ln40_reg_2414_pp0_iter13_reg);

assign or_ln53_12_fu_2088_p2 = (xor_ln53_1_fu_1905_p2 | and_ln40_1_reg_2428_pp0_iter13_reg);

assign or_ln53_13_fu_2093_p2 = (or_ln53_12_fu_2088_p2 | or_ln53_11_fu_2068_p2);

assign or_ln53_14_fu_2115_p2 = (xor_ln53_2_fu_1930_p2 | and_ln40_2_reg_2443_pp0_iter13_reg);

assign or_ln53_15_fu_2120_p2 = (or_ln53_14_fu_2115_p2 | or_ln53_13_fu_2093_p2);

assign or_ln53_16_fu_2132_p2 = (and_ln53_9_fu_2057_p2 | and_ln41_14_reg_2730);

assign or_ln53_17_fu_2137_p2 = (and_ln53_10_fu_2063_p2 | and_ln41_9_reg_2664_pp0_iter13_reg);

assign or_ln53_18_fu_2159_p2 = (xor_ln53_4_fu_2126_p2 | and_ln41_21_fu_2110_p2);

assign or_ln53_19_fu_2165_p2 = (or_ln53_18_fu_2159_p2 | and_ln53_14_fu_2153_p2);

assign or_ln53_1_fu_1136_p2 = (icmp_ln53_3_reg_2579 | icmp_ln53_2_reg_2574);

assign or_ln53_20_fu_2171_p2 = (or_ln53_19_fu_2165_p2 | and_ln53_13_fu_2147_p2);

assign or_ln53_2_fu_1504_p2 = (icmp_ln53_5_reg_2644 | icmp_ln53_4_reg_2639);

assign or_ln53_3_fu_1508_p2 = (icmp_ln53_7_reg_2654 | icmp_ln53_6_reg_2649);

assign or_ln53_4_fu_1910_p2 = (icmp_ln53_9_reg_2710 | icmp_ln53_8_reg_2705);

assign or_ln53_5_fu_1914_p2 = (icmp_ln53_11_reg_2720 | icmp_ln53_10_reg_2715);

assign or_ln53_6_fu_2027_p2 = (and_ln53_6_fu_1991_p2 | and_ln41_16_fu_1997_p2);

assign or_ln53_7_fu_2033_p2 = (or_ln53_6_fu_2027_p2 | and_ln41_15_fu_1982_p2);

assign or_ln53_8_fu_2039_p2 = (and_ln53_8_fu_2021_p2 | and_ln41_17_fu_2012_p2);

assign or_ln53_9_fu_2045_p2 = (or_ln53_8_fu_2039_p2 | and_ln53_7_fu_2006_p2);

assign or_ln53_fu_1132_p2 = (icmp_ln53_reg_2564 | icmp_ln53_1_reg_2569);

assign or_ln58_1_fu_1940_p2 = (icmp_ln58_3_reg_2760 | icmp_ln58_2_reg_2755);

assign or_ln58_2_fu_1962_p2 = (icmp_ln58_5_reg_2770 | icmp_ln58_4_reg_2765);

assign or_ln58_3_fu_1966_p2 = (icmp_ln58_7_reg_2780 | icmp_ln58_6_reg_2775);

assign or_ln58_fu_1936_p2 = (icmp_ln58_reg_2745 | icmp_ln58_1_reg_2750);

assign sel_tmp116_fu_2177_p2 = (xor_ln58_fu_1956_p2 & or_ln53_20_fu_2171_p2);

assign select_ln41_1_fu_1124_p3 = ((and_ln41_4_fu_1111_p2[0:0] === 1'b1) ? 32'd2139095040 : select_ln47_reg_2536);

assign select_ln41_2_fu_1490_p3 = ((and_ln41_9_fu_1485_p2[0:0] === 1'b1) ? select_ln41_reg_2589_pp0_iter10_reg : select_ln50_reg_2611);

assign select_ln41_3_fu_1497_p3 = ((and_ln41_9_fu_1485_p2[0:0] === 1'b1) ? select_ln41_1_reg_2597_pp0_iter10_reg : select_ln51_reg_2618);

assign select_ln41_4_fu_1768_p3 = ((and_ln41_14_fu_1763_p2[0:0] === 1'b1) ? select_ln41_2_reg_2669_pp0_iter12_reg : select_ln50_1_reg_2691);

assign select_ln41_5_fu_1775_p3 = ((and_ln41_14_fu_1763_p2[0:0] === 1'b1) ? select_ln41_3_reg_2677_pp0_iter12_reg : select_ln51_1_reg_2698);

assign select_ln41_fu_1116_p3 = ((and_ln41_4_fu_1111_p2[0:0] === 1'b1) ? 32'd4286578688 : select_ln47_1_reg_2543);

assign select_ln47_1_fu_948_p3 = ((and_ln47_1_fu_936_p2[0:0] === 1'b1) ? p_b_read_assign_reg_2496_pp0_iter7_reg : p_tmp_reg_2488_pp0_iter7_reg);

assign select_ln47_2_fu_1036_p3 = ((and_ln47_3_fu_1030_p2[0:0] === 1'b1) ? p_tmp_1_reg_2504_pp0_iter7_reg : p_b_read_assign_1_reg_2512_pp0_iter7_reg);

assign select_ln47_3_fu_1042_p3 = ((and_ln47_3_fu_1030_p2[0:0] === 1'b1) ? p_b_read_assign_1_reg_2512_pp0_iter7_reg : p_tmp_1_reg_2504_pp0_iter7_reg);

assign select_ln47_4_fu_1410_p3 = ((and_ln47_5_fu_1404_p2[0:0] === 1'b1) ? p_tmp_2_reg_2520_pp0_iter9_reg : p_b_read_assign_2_reg_2528_pp0_iter9_reg);

assign select_ln47_5_fu_1416_p3 = ((and_ln47_5_fu_1404_p2[0:0] === 1'b1) ? p_b_read_assign_2_reg_2528_pp0_iter9_reg : p_tmp_2_reg_2520_pp0_iter9_reg);

assign select_ln47_fu_942_p3 = ((and_ln47_1_fu_936_p2[0:0] === 1'b1) ? p_tmp_reg_2488_pp0_iter7_reg : p_b_read_assign_reg_2496_pp0_iter7_reg);

assign select_ln50_1_fu_1606_p3 = ((and_ln215_3_fu_1600_p2[0:0] === 1'b1) ? select_ln41_2_reg_2669 : select_ln47_5_reg_2632_pp0_iter11_reg);

assign select_ln50_fu_1234_p3 = ((and_ln215_1_fu_1228_p2[0:0] === 1'b1) ? select_ln41_reg_2589 : select_ln47_3_reg_2557_pp0_iter9_reg);

assign select_ln51_1_fu_1694_p3 = ((and_ln192_3_fu_1688_p2[0:0] === 1'b1) ? select_ln41_3_reg_2677 : select_ln47_4_reg_2625_pp0_iter11_reg);

assign select_ln51_fu_1322_p3 = ((and_ln192_1_fu_1316_p2[0:0] === 1'b1) ? select_ln41_1_reg_2597 : select_ln47_2_reg_2550_pp0_iter9_reg);

assign tmp140_demorgan_fu_2183_p2 = (sel_tmp116_fu_2177_p2 | or_ln53_10_fu_2051_p2);

assign tmp140_fu_2189_p2 = (tmp140_demorgan_fu_2183_p2 ^ 1'd1);

assign tmp_11_fu_1051_p4 = {{bitcast_ln53_fu_1048_p1[30:23]}};

assign tmp_12_fu_1068_p4 = {{bitcast_ln53_1_fu_1065_p1[30:23]}};

assign tmp_14_fu_474_p4 = {{bitcast_ln40_1_fu_470_p1[30:23]}};

assign tmp_16_fu_504_p4 = {{bitcast_ln41_3_fu_500_p1[30:23]}};

assign tmp_17_fu_522_p4 = {{bitcast_ln41_4_fu_518_p1[30:23]}};

assign tmp_19_fu_570_p4 = {{bitcast_ln41_5_fu_566_p1[30:23]}};

assign tmp_21_fu_957_p4 = {{bitcast_ln47_2_fu_954_p1[30:23]}};

assign tmp_22_fu_974_p4 = {{bitcast_ln47_3_fu_971_p1[30:23]}};

assign tmp_24_fu_1155_p4 = {{bitcast_ln215_fu_1152_p1[30:23]}};

assign tmp_25_fu_1172_p4 = {{bitcast_ln215_1_fu_1169_p1[30:23]}};

assign tmp_27_fu_1243_p4 = {{bitcast_ln192_fu_1240_p1[30:23]}};

assign tmp_28_fu_1260_p4 = {{bitcast_ln192_1_fu_1257_p1[30:23]}};

assign tmp_2_fu_378_p4 = {{bitcast_ln41_fu_374_p1[30:23]}};

assign tmp_30_fu_1425_p4 = {{bitcast_ln53_2_fu_1422_p1[30:23]}};

assign tmp_31_fu_1442_p4 = {{bitcast_ln53_3_fu_1439_p1[30:23]}};

assign tmp_33_fu_600_p4 = {{bitcast_ln40_2_fu_596_p1[30:23]}};

assign tmp_35_fu_630_p4 = {{bitcast_ln41_6_fu_626_p1[30:23]}};

assign tmp_36_fu_648_p4 = {{bitcast_ln41_7_fu_644_p1[30:23]}};

assign tmp_38_fu_696_p4 = {{bitcast_ln41_8_fu_692_p1[30:23]}};

assign tmp_3_fu_396_p4 = {{bitcast_ln41_1_fu_392_p1[30:23]}};

assign tmp_40_fu_1331_p4 = {{bitcast_ln47_4_fu_1328_p1[30:23]}};

assign tmp_41_fu_1348_p4 = {{bitcast_ln47_5_fu_1345_p1[30:23]}};

assign tmp_43_fu_1527_p4 = {{bitcast_ln215_2_fu_1524_p1[30:23]}};

assign tmp_44_fu_1544_p4 = {{bitcast_ln215_3_fu_1541_p1[30:23]}};

assign tmp_46_fu_1615_p4 = {{bitcast_ln192_2_fu_1612_p1[30:23]}};

assign tmp_47_fu_1632_p4 = {{bitcast_ln192_3_fu_1629_p1[30:23]}};

assign tmp_49_fu_1703_p4 = {{bitcast_ln53_4_fu_1700_p1[30:23]}};

assign tmp_50_fu_1720_p4 = {{bitcast_ln53_5_fu_1717_p1[30:23]}};

assign tmp_52_fu_1786_p4 = {{bitcast_ln58_fu_1782_p1[30:23]}};

assign tmp_53_fu_1803_p4 = {{bitcast_ln58_1_fu_1800_p1[30:23]}};

assign tmp_55_fu_1845_p4 = {{bitcast_ln58_2_fu_1841_p1[30:23]}};

assign tmp_56_fu_1862_p4 = {{bitcast_ln58_3_fu_1859_p1[30:23]}};

assign tmp_6_fu_444_p4 = {{bitcast_ln41_2_fu_440_p1[30:23]}};

assign tmp_8_fu_880_p4 = {{bitcast_ln47_1_fu_877_p1[30:23]}};

assign tmp_fu_348_p4 = {{bitcast_ln40_fu_344_p1[30:23]}};

assign tmp_s_fu_863_p4 = {{bitcast_ln47_fu_860_p1[30:23]}};

assign trunc_ln192_1_fu_1270_p1 = bitcast_ln192_1_fu_1257_p1[22:0];

assign trunc_ln192_2_fu_1625_p1 = bitcast_ln192_2_fu_1612_p1[22:0];

assign trunc_ln192_3_fu_1642_p1 = bitcast_ln192_3_fu_1629_p1[22:0];

assign trunc_ln192_fu_1253_p1 = bitcast_ln192_fu_1240_p1[22:0];

assign trunc_ln215_1_fu_1182_p1 = bitcast_ln215_1_fu_1169_p1[22:0];

assign trunc_ln215_2_fu_1537_p1 = bitcast_ln215_2_fu_1524_p1[22:0];

assign trunc_ln215_3_fu_1554_p1 = bitcast_ln215_3_fu_1541_p1[22:0];

assign trunc_ln215_fu_1165_p1 = bitcast_ln215_fu_1152_p1[22:0];

assign trunc_ln40_1_fu_484_p1 = bitcast_ln40_1_fu_470_p1[22:0];

assign trunc_ln40_2_fu_610_p1 = bitcast_ln40_2_fu_596_p1[22:0];

assign trunc_ln40_fu_358_p1 = bitcast_ln40_fu_344_p1[22:0];

assign trunc_ln41_1_fu_406_p1 = bitcast_ln41_1_fu_392_p1[22:0];

assign trunc_ln41_2_fu_454_p1 = bitcast_ln41_2_fu_440_p1[22:0];

assign trunc_ln41_3_fu_514_p1 = bitcast_ln41_3_fu_500_p1[22:0];

assign trunc_ln41_4_fu_532_p1 = bitcast_ln41_4_fu_518_p1[22:0];

assign trunc_ln41_5_fu_580_p1 = bitcast_ln41_5_fu_566_p1[22:0];

assign trunc_ln41_6_fu_640_p1 = bitcast_ln41_6_fu_626_p1[22:0];

assign trunc_ln41_7_fu_658_p1 = bitcast_ln41_7_fu_644_p1[22:0];

assign trunc_ln41_8_fu_706_p1 = bitcast_ln41_8_fu_692_p1[22:0];

assign trunc_ln41_fu_388_p1 = bitcast_ln41_fu_374_p1[22:0];

assign trunc_ln47_1_fu_890_p1 = bitcast_ln47_1_fu_877_p1[22:0];

assign trunc_ln47_2_fu_967_p1 = bitcast_ln47_2_fu_954_p1[22:0];

assign trunc_ln47_3_fu_984_p1 = bitcast_ln47_3_fu_971_p1[22:0];

assign trunc_ln47_4_fu_1341_p1 = bitcast_ln47_4_fu_1328_p1[22:0];

assign trunc_ln47_5_fu_1358_p1 = bitcast_ln47_5_fu_1345_p1[22:0];

assign trunc_ln47_fu_873_p1 = bitcast_ln47_fu_860_p1[22:0];

assign trunc_ln53_1_fu_1078_p1 = bitcast_ln53_1_fu_1065_p1[22:0];

assign trunc_ln53_2_fu_1435_p1 = bitcast_ln53_2_fu_1422_p1[22:0];

assign trunc_ln53_3_fu_1452_p1 = bitcast_ln53_3_fu_1439_p1[22:0];

assign trunc_ln53_4_fu_1713_p1 = bitcast_ln53_4_fu_1700_p1[22:0];

assign trunc_ln53_5_fu_1730_p1 = bitcast_ln53_5_fu_1717_p1[22:0];

assign trunc_ln53_fu_1061_p1 = bitcast_ln53_fu_1048_p1[22:0];

assign trunc_ln58_1_fu_1813_p1 = bitcast_ln58_1_fu_1800_p1[22:0];

assign trunc_ln58_2_fu_1855_p1 = bitcast_ln58_2_fu_1841_p1[22:0];

assign trunc_ln58_3_fu_1872_p1 = bitcast_ln58_3_fu_1859_p1[22:0];

assign trunc_ln58_fu_1796_p1 = bitcast_ln58_fu_1782_p1[22:0];

assign xor_ln40_1_fu_2001_p2 = (1'd1 ^ and_ln40_1_reg_2428_pp0_iter13_reg);

assign xor_ln40_2_fu_2016_p2 = (1'd1 ^ and_ln40_2_reg_2443_pp0_iter13_reg);

assign xor_ln40_fu_1986_p2 = (1'd1 ^ and_ln40_reg_2414_pp0_iter13_reg);

assign xor_ln41_1_fu_1480_p2 = (or_ln41_1_reg_2437_pp0_iter10_reg ^ 1'd1);

assign xor_ln41_2_fu_1758_p2 = (or_ln41_2_reg_2452_pp0_iter12_reg ^ 1'd1);

assign xor_ln41_fu_1106_p2 = (or_ln41_reg_2422_pp0_iter8_reg ^ 1'd1);

assign xor_ln53_1_fu_1905_p2 = (1'd1 ^ and_ln53_3_reg_2685_pp0_iter13_reg);

assign xor_ln53_2_fu_1930_p2 = (1'd1 ^ and_ln53_5_fu_1924_p2);

assign xor_ln53_3_fu_2099_p2 = (or_ln53_13_fu_2093_p2 ^ 1'd1);

assign xor_ln53_4_fu_2126_p2 = (or_ln53_15_fu_2120_p2 ^ 1'd1);

assign xor_ln53_fu_1900_p2 = (1'd1 ^ and_ln53_1_reg_2605_pp0_iter13_reg);

assign xor_ln58_fu_1956_p2 = (1'd1 ^ and_ln58_1_fu_1950_p2);

endmodule //rayIntersect
